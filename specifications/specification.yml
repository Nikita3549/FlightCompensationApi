openapi: 3.0.3
info:
  title: SkyHelp Compensation API
  version: 1.0.0
  description: >
    This API determines whether a passenger is eligible for compensation
    due to a delayed or cancelled flight based on the flight number and departure date.

paths:
  /v1/compensation/eligibility:
    get:
      summary: Check flight compensation eligibility
      description: >
        Returns whether the specified flight qualifies for compensation according to its
        cancellation status or delay duration.
      tags:
        - Compensation
      parameters:
        - name: flightNumber
          in: query
          required: true
          description: >
            Flight number in the format **IATA code (2 characters) + flight code (1â€“4 digits)**.  
            Examples: AF1488, LH45, KL120.
          schema:
            type: string
            pattern: '^[A-Z0-9]{2}\d{1,4}$'
            example: AF1135
        - name: date
          in: query
          required: true
          description: >
            Flight departure date in `YYYY-MM-DD` format.
          schema:
            type: string
            format: date
            example: 2025-10-06
      responses:
        '200':
          description: Flight eligibility response. If isEligible = false so body is empty
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/EligibleFlightResponse'
                  - $ref: '#/components/schemas/NotEligibleFlightResponse'
        '400':
          description: Bad request - invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: Invalid flight number format. Expected like "AF1488"
                  error:
                    type: string
                    example: Bad Request
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Internal server error

components:
  schemas:
    EligibleFlightResponse:
      type: object
      description: Flight is eligible for compensation
      properties:
        isEligible:
          type: boolean
          example: true
        reason:
          type: string
          description: Reason for compensation
          enum: [delay, cancellation]
          example: cancellation/delay
        arrivalDate:
          type: object
          properties:
            dateUtc:
              type: string
              format: date-time
              example: 2025-10-06T06:10:00.000Z
            dateLocal:
              type: string
              example: 2025-10-06T08:10:00.000
        departureDate:
          type: object
          properties:
            dateUtc:
              type: string
              format: date-time
              example: 2025-10-06T04:20:00.000Z
            dateLocal:
              type: string
              example: 2025-10-06T06:20:00.000
        departureAirport:
          $ref: '#/components/schemas/Airport'
        arrivalAirport:
          $ref: '#/components/schemas/Airport'
        delay:
          type: integer
          example: 180

    NotEligibleFlightResponse:
      type: object
      description: Flight is NOT eligible for compensation
      properties:
        isEligible:
          type: boolean
          example: false

    Airport:
      type: object
      description: Airport information used in the flight status response.
      properties:
        name:
          type: string
          description: The full name of the airport.
          example: Berlin Brandenburg Airport
        countryName:
          type: string
          description: The country where the airport is located.
          example: Germany
        city:
          type: string
          description: The city where the airport is located.
          example: Berlin
        icao:
          type: string
          description: The 4-letter ICAO code of the airport.
          example: EDDB
        iata:
          type: string
          description: The 3-letter IATA code of the airport.
          example: BER
